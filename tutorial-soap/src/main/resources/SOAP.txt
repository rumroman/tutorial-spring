                                        SOAP.

Сервис-ориентированная архитектура(SOA).
Веб службы SOAP слабо саязаны , потому что клиент веб-службы , известный как потребитель, не должен знать детали его
реализации(например, язык использованный при разработке,платформа и т.д) Потребитель имеет возможность вызвать веб-
службу SOAP с помощью простого интерфейса, описывающего доступные бизнес-методы(параметры и возвращаемые значения).
Реализация может быть выполнена на любом языке (Visual Basic, C#, C,C++,Java и т.д.)Потребитель и поставщик веб-службы
будут по-прежнему иметь возможность обмениваться данными слабсвязанным способом: с помощью XML-документов. Потребитель
отправляет запрос веб службе SOAP  в виде документа XML и, возможно, получает ответ также в формате XML.

    Веб-службы SOAP заботятся и о распределении.По умполчанию используется протокол HTTP.(не сохраняющий состояние)
Во всех случаях веб-службы SOAP предствавляют стандартный способ соединения разных частей программного обеспечения.


                                        Основные сведения о себ-службах SOAP.

По простому веб-службы SOAP - это бизнес-логика , предоставляемая через службу(поставщика услуг) клиенту (потребителю услуг).
Однако в отличие от объектов или компонентов EJB , веб-службы SOAP предоставляют слабосвязанный интерфейс с помощью XML.
Стандарты веб-служб SOAP указывают, что интерфейс, которому посылается сообщение, должен определять формат сообщений
запроса и ответа, а также механизмы для публикации и обнаружения интерфейсов веб-служб(реестр служб).

    Веб-службы SOAP зависят от нескольких технологий и протоколов для передачи и преобразования данных от потребителя
к поставщику стандартным образом:
    -расширяемый язык разметки (XML) основной фундамент , на котором строятся и определятся веб-службы SOAP(SOAP,WSDL,
    UDDI);
    -Web Services Description Language(WSDL, язык описания веб-служб) - определяет протокол, интерфейс, типы сообщений
    и взаимодействия между потребителем и поставщиком;
    -Simple Object Access Protocol (SOAP, простой протокол доступа к объекту) - протокол кодирования сообщения ,
    основанный на технологиях XML, определяющих "конверт" для общения веб-служб;
    -транспортный протокол - позволяет обмениваться сообщениями .В основном HTTP.
    -Universal Description Discovery and Integration(UDDI) - необязательныйй реестр служб и механизмов обнаружения,
    похожий нателефонный справочник. Он может быть использован для хранения и категоризации SOAP-интерфейсов веб-служб
    (WSDL).

WSDL - это язык определения интерфейса(IDL) , который определяет взаимодействие между потребителями и веб-службами SOAP.
Он является главным для веб-служб SOAP,поскольку описывает тип сообщения , порт, протокол коммуникации, поддерживаемые
операции , расположение и то, что потребитель должен получить взамен. Данный язык оаркдклякт контракт , которому будет
соответствовать служба.

Можно рассмотреть WSDL как интерфейс Java, который написан на XML.

    SOAP.
WSDL описывает абстракный интерфейс веб-службы , в то время как SOAP предоставляет конкретнуб реализацию, определяя
XML-сообщения , которыми обмениваются потребитель и поставщик. Он обеспечивает механизм связи для подключения веб-служб,
обмена форматированными XML-данными через сетевой протокол, обычно HTTP. Вместо того чтобы использовать HTTP, для
выполнения запроса веб-страниц с помощью браузера SOAP отправляет XML-сообщения , помещая их в запрос HTTP, и получает
ответ HTTP.

                                            JAX-WS 2.2a

JAX-WS 2.2a - определяет набор API. Он предоставляет потребителям и службам возможности по отправке и получению запросов
веб-служб через SOAP, маскируя сложность протокола. Таким образом ни потребитель, ни служба не должны генерировать
или анализировать SOAP-сообщения , поскольку низкоуровненой обработкой занимается JAX-WS. Спецификации JAX-WS зависят
от других спецификаций , таких как архитектура Java для связывания XML(JAXB).

                                          Создание веб-служб SOAP.

Веб-службы - это просто аннотированный POJO, который должен быть развернут в конейнере веб-службы.
Как и сущности или EJB , веб-службы SOAP используют модель аннотированного POJO, который следует политике конфигурации
с помощью исключений.Это означает , что веб-служба может быть простым классом Java , который имеет аннотацию
@javax.jws.WebService, если все значения по умолчанию вам подходят.Тогда среда выполнения JAX-WS сгенерирует код,
необходимый для преобразования вызова метода Java в XML, который отправляется через HTTP. При описании архитектуры
веб-службы данные для преобразования должны представлять собой XML-документ, поэтому требуется метод для преобразования
объекта JAva в документ XML. Здесь действие вступает JAXB,  который имеет простые аннотации и мощный API. Благодаря
 JAXB  можно избежать разработки низкоуровневых средств анализа  XML , и это происходит неявно. Веб-служба манипулирует
 объектом Java ,  и то же верно для потребителя.
К напиисанию веб-службы предъявляются следующие требования:
    - класс должен иметь аннотацию @javax.jws.WebService или XML-эквивалент в дескрипторе развертывания(webservices.xml);
    - класс( он же реализация конечной точки службы), которые должны иметь аннотацию @WebService;
    - класс должен быть определен как общедоступный и не должен иметь спецификаторы final или abstract;
    - класс должен иметь общедоступный конструктор по умолчанию;
    - для того чтобы преобразовать веб-слудбу SOAP  в компонент-конечную точку, класс должен иметь аннотацию
      @javax.ejb.Stateless или @javax.ejb.Singleton
    - служба должна быть объектом , не сохраняющим состояние, и не должна сохранять характерное для клиента состояние
      во время вызовов методов.

                                        Конечные точки веб-служб SOAP.

JAX-WS позволяет использовать в качестве веб-служб обычные классы Java и EJB. Мы называем это интерфейсами конечной
точки службы (SEI).







