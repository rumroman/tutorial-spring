                                            Spring MVC. 5.0.5


                                            Конфигурация.

    Можно конфигурировать через xml, можно через Java классы, можно скомбинировать, итого - 3 способа.


1. Конфигурация через xml файл.

    В Spring MVC вся логика работы построена вокруг DispatcherServlet, который принимает и обрабатывает все HTTP-запросы
    и ответы на них. Рабочий процесс обработки запроса проиллюстрирован на следующей диаграмме:
        https://habrastorage.org/web/2b0/909/5f3/2b09095f35224d0c96cc02d9fc471051.png

    Последовательность событий , соответствующая входящему HTTP-запросу:

    -После получения HTTP-запроса DispatcherServlet обращается к интерфейсу HandlerMapping, который определяет , какой
    контроллер должен быть вызван, после чего, отправляет запрос в нужный контроллер.

    -Контроллер принимает запрос и вызывает соответствующий служебный метод, основанный на GET или POST. Вызванный
    метод определяет данные Модели , основанные на определенной бизнес-логике и возвращает в DispatcherServlet
    имя Вида(View).

    -При помощи интерфейса ViewResolver DispatcherSerlvet определяет, какой Вид нужно использовать на основании
    полученного имени.

    -После того , как Вид (View) создан, DispatcherServlet отправляет данные Модели в виде атрибутов в Вид, который
    в конечном итоге отображается в браузере.

    Все вышеупомянутые компоненты , а именно , HandlerMapping, Controller, ViewResolver, являются частями интерфейса
    WebApplicationContext extends ApplicationContext, с некоторыми дополнительными особенностями, небоходимыми для
    создания web-приложений.

    Вам необходимо связвать (замапить) запросы , которые Вы хотитет